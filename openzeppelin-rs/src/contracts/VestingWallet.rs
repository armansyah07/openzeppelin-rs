pub use vesting_wallet::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod vesting_wallet {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiaryAddress\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\",\"components\":[]},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"ERC20Released\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"EtherReleased\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"release\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"release\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"receive\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static VESTINGWALLET_ABI: ::ethers_contract::Lazy<::ethers_core::abi::Abi> = ::ethers_contract::Lazy::new(||
    ::ethers_core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        224,
        96,
        64,
        82,
        96,
        64,
        81,
        97,
        12,
        219,
        56,
        3,
        128,
        97,
        12,
        219,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        34,
        145,
        97,
        0,
        208,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        97,
        0,
        143,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        86,
        101,
        115,
        116,
        105,
        110,
        103,
        87,
        97,
        108,
        108,
        101,
        116,
        58,
        32,
        98,
        101,
        110,
        101,
        102,
        105,
        99,
        105,
        97,
        114,
        121,
        32,
        105,
        115,
        32,
        122,
        101,
        96,
        68,
        130,
        1,
        82,
        105,
        114,
        111,
        32,
        97,
        100,
        100,
        114,
        101,
        115,
        115,
        96,
        176,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        96,
        128,
        82,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        22,
        96,
        160,
        82,
        22,
        96,
        192,
        82,
        97,
        1,
        33,
        86,
        91,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        0,
        203,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        0,
        229,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        0,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        80,
        97,
        1,
        10,
        96,
        32,
        133,
        1,
        97,
        0,
        180,
        86,
        91,
        145,
        80,
        97,
        1,
        24,
        96,
        64,
        133,
        1,
        97,
        0,
        180,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        128,
        81,
        96,
        160,
        81,
        96,
        192,
        81,
        97,
        11,
        112,
        97,
        1,
        107,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        96,
        238,
        1,
        82,
        129,
        129,
        97,
        4,
        206,
        1,
        82,
        97,
        5,
        35,
        1,
        82,
        96,
        0,
        97,
        4,
        106,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        88,
        1,
        82,
        129,
        129,
        97,
        2,
        241,
        1,
        82,
        97,
        4,
        10,
        1,
        82,
        97,
        11,
        112,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        0,
        160,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        134,
        209,
        166,
        159,
        17,
        97,
        0,
        100,
        87,
        128,
        99,
        134,
        209,
        166,
        159,
        20,
        97,
        1,
        162,
        87,
        128,
        99,
        150,
        19,
        37,
        33,
        20,
        97,
        1,
        183,
        87,
        128,
        99,
        152,
        82,
        89,
        92,
        20,
        97,
        1,
        204,
        87,
        128,
        99,
        163,
        248,
        234,
        206,
        20,
        97,
        2,
        2,
        87,
        128,
        99,
        190,
        154,
        101,
        85,
        20,
        97,
        2,
        34,
        87,
        128,
        99,
        251,
        204,
        237,
        174,
        20,
        97,
        2,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        10,
        23,
        176,
        107,
        20,
        97,
        0,
        172,
        87,
        128,
        99,
        15,
        181,
        166,
        180,
        20,
        97,
        0,
        223,
        87,
        128,
        99,
        25,
        22,
        85,
        135,
        20,
        97,
        1,
        28,
        87,
        128,
        99,
        56,
        175,
        62,
        237,
        20,
        97,
        1,
        62,
        87,
        128,
        99,
        129,
        14,
        194,
        59,
        20,
        97,
        1,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        54,
        97,
        0,
        167,
        87,
        0,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        0,
        184,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        0,
        199,
        54,
        96,
        4,
        97,
        9,
        122,
        86,
        91,
        97,
        2,
        76,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        0,
        235,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        0,
        204,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        40,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        60,
        97,
        1,
        55,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        97,
        2,
        112,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        74,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        214,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        1,
        157,
        54,
        96,
        4,
        97,
        9,
        199,
        86,
        91,
        97,
        3,
        26,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        60,
        97,
        3,
        176,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        0,
        204,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        216,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        1,
        231,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        14,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        2,
        29,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        97,
        4,
        50,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        46,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        4,
        95,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        67,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        4,
        141,
        86,
        91,
        96,
        0,
        97,
        2,
        106,
        97,
        2,
        90,
        96,
        0,
        84,
        144,
        86,
        91,
        97,
        2,
        100,
        144,
        71,
        97,
        10,
        16,
        86,
        91,
        131,
        97,
        4,
        169,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        2,
        123,
        130,
        97,
        4,
        50,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        146,
        147,
        80,
        131,
        146,
        144,
        145,
        144,
        97,
        2,
        168,
        144,
        132,
        144,
        97,
        10,
        16,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        129,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        127,
        192,
        229,
        35,
        73,
        13,
        213,
        35,
        195,
        59,
        24,
        120,
        201,
        235,
        20,
        255,
        70,
        153,
        30,
        63,
        91,
        44,
        211,
        55,
        16,
        145,
        134,
        24,
        242,
        163,
        156,
        186,
        27,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        97,
        3,
        22,
        130,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        97,
        5,
        131,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        3,
        169,
        144,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        123,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        3,
        159,
        145,
        144,
        97,
        10,
        40,
        86,
        91,
        97,
        2,
        100,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        3,
        186,
        97,
        4,
        141,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        128,
        130,
        130,
        84,
        97,
        3,
        205,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        129,
        129,
        82,
        127,
        218,
        157,
        78,
        95,
        16,
        27,
        139,
        155,
        28,
        91,
        118,
        208,
        197,
        169,
        247,
        146,
        53,
        113,
        172,
        252,
        2,
        55,
        106,
        160,
        118,
        183,
        90,
        140,
        8,
        12,
        149,
        107,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        97,
        4,
        47,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        97,
        5,
        218,
        86,
        91,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        4,
        85,
        131,
        66,
        97,
        3,
        26,
        86,
        91,
        97,
        2,
        106,
        145,
        144,
        97,
        10,
        65,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        144,
        86,
        91,
        96,
        0,
        128,
        84,
        97,
        4,
        154,
        66,
        97,
        2,
        76,
        86,
        91,
        97,
        4,
        164,
        145,
        144,
        97,
        10,
        65,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        97,
        4,
        179,
        97,
        4,
        95,
        86,
        91,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        16,
        21,
        97,
        4,
        204,
        87,
        80,
        96,
        0,
        97,
        2,
        106,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        4,
        255,
        97,
        4,
        95,
        86,
        91,
        97,
        5,
        9,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        17,
        21,
        97,
        5,
        33,
        87,
        80,
        129,
        97,
        2,
        106,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        5,
        84,
        97,
        4,
        95,
        86,
        91,
        97,
        5,
        104,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        97,
        10,
        65,
        86,
        91,
        97,
        5,
        114,
        144,
        133,
        97,
        10,
        88,
        86,
        91,
        97,
        5,
        124,
        145,
        144,
        97,
        10,
        119,
        86,
        91,
        144,
        80,
        97,
        2,
        106,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        36,
        130,
        1,
        82,
        96,
        68,
        128,
        130,
        1,
        132,
        144,
        82,
        130,
        81,
        128,
        131,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        100,
        144,
        145,
        1,
        144,
        145,
        82,
        96,
        32,
        129,
        1,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        22,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        23,
        144,
        82,
        97,
        5,
        213,
        144,
        132,
        144,
        97,
        6,
        248,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        128,
        71,
        16,
        21,
        97,
        6,
        47,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        130,
        96,
        64,
        81,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        6,
        124,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        6,
        129,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        80,
        144,
        80,
        128,
        97,
        5,
        213,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        58,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        117,
        110,
        97,
        98,
        108,
        101,
        32,
        116,
        111,
        32,
        115,
        101,
        110,
        100,
        32,
        118,
        97,
        108,
        117,
        101,
        44,
        32,
        114,
        96,
        68,
        130,
        1,
        82,
        127,
        101,
        99,
        105,
        112,
        105,
        101,
        110,
        116,
        32,
        109,
        97,
        121,
        32,
        104,
        97,
        118,
        101,
        32,
        114,
        101,
        118,
        101,
        114,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        0,
        97,
        7,
        77,
        130,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        32,
        129,
        82,
        96,
        32,
        1,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        108,
        111,
        119,
        45,
        108,
        101,
        118,
        101,
        108,
        32,
        99,
        97,
        108,
        108,
        32,
        102,
        97,
        105,
        108,
        101,
        100,
        129,
        82,
        80,
        133,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        7,
        205,
        144,
        146,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        128,
        81,
        96,
        0,
        20,
        128,
        97,
        7,
        110,
        87,
        80,
        128,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        7,
        110,
        145,
        144,
        97,
        10,
        153,
        86,
        91,
        97,
        5,
        213,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        69,
        82,
        67,
        50,
        48,
        32,
        111,
        112,
        101,
        114,
        97,
        116,
        105,
        111,
        110,
        32,
        100,
        105,
        100,
        32,
        110,
        96,
        68,
        130,
        1,
        82,
        105,
        27,
        221,
        8,
        28,
        221,
        88,
        216,
        217,
        89,
        89,
        96,
        178,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        96,
        97,
        7,
        220,
        132,
        132,
        96,
        0,
        133,
        97,
        7,
        228,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        130,
        71,
        16,
        21,
        97,
        8,
        69,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        38,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        32,
        102,
        111,
        96,
        68,
        130,
        1,
        82,
        101,
        28,
        136,
        24,
        216,
        91,
        27,
        96,
        210,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        0,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        133,
        135,
        96,
        64,
        81,
        97,
        8,
        97,
        145,
        144,
        97,
        10,
        235,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        8,
        158,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        8,
        163,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        145,
        80,
        145,
        80,
        97,
        8,
        180,
        135,
        131,
        131,
        135,
        97,
        8,
        191,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        131,
        21,
        97,
        9,
        46,
        87,
        130,
        81,
        96,
        0,
        3,
        97,
        9,
        39,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        59,
        97,
        9,
        39,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        99,
        97,
        108,
        108,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        6,
        38,
        86,
        91,
        80,
        129,
        97,
        7,
        220,
        86,
        91,
        97,
        7,
        220,
        131,
        131,
        129,
        81,
        21,
        97,
        9,
        67,
        87,
        129,
        81,
        128,
        131,
        96,
        32,
        1,
        253,
        91,
        128,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        6,
        38,
        145,
        144,
        97,
        11,
        7,
        86,
        91,
        128,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        9,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        9,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        9,
        93,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        9,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        9,
        190,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        9,
        149,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        9,
        218,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        227,
        131,
        97,
        9,
        149,
        86,
        91,
        145,
        80,
        97,
        9,
        241,
        96,
        32,
        132,
        1,
        97,
        9,
        93,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        25,
        130,
        17,
        21,
        97,
        10,
        35,
        87,
        97,
        10,
        35,
        97,
        9,
        250,
        86,
        91,
        80,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        10,
        58,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        10,
        83,
        87,
        97,
        10,
        83,
        97,
        9,
        250,
        86,
        91,
        80,
        3,
        144,
        86,
        91,
        96,
        0,
        129,
        96,
        0,
        25,
        4,
        131,
        17,
        130,
        21,
        21,
        22,
        21,
        97,
        10,
        114,
        87,
        97,
        10,
        114,
        97,
        9,
        250,
        86,
        91,
        80,
        2,
        144,
        86,
        91,
        96,
        0,
        130,
        97,
        10,
        148,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        10,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        3,
        169,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        10,
        214,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        10,
        190,
        86,
        91,
        131,
        129,
        17,
        21,
        97,
        10,
        229,
        87,
        96,
        0,
        132,
        132,
        1,
        82,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        81,
        97,
        10,
        253,
        129,
        132,
        96,
        32,
        135,
        1,
        97,
        10,
        187,
        86,
        91,
        145,
        144,
        145,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        11,
        38,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        10,
        187,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        41,
        52,
        224,
        133,
        30,
        14,
        180,
        4,
        184,
        172,
        238,
        191,
        241,
        6,
        131,
        97,
        17,
        12,
        236,
        219,
        173,
        95,
        159,
        121,
        29,
        251,
        45,
        251,
        221,
        252,
        254,
        25,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        13,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static VESTINGWALLET_BYTECODE: ::ethers_core::types::Bytes = ::ethers_core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        0,
        160,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        134,
        209,
        166,
        159,
        17,
        97,
        0,
        100,
        87,
        128,
        99,
        134,
        209,
        166,
        159,
        20,
        97,
        1,
        162,
        87,
        128,
        99,
        150,
        19,
        37,
        33,
        20,
        97,
        1,
        183,
        87,
        128,
        99,
        152,
        82,
        89,
        92,
        20,
        97,
        1,
        204,
        87,
        128,
        99,
        163,
        248,
        234,
        206,
        20,
        97,
        2,
        2,
        87,
        128,
        99,
        190,
        154,
        101,
        85,
        20,
        97,
        2,
        34,
        87,
        128,
        99,
        251,
        204,
        237,
        174,
        20,
        97,
        2,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        10,
        23,
        176,
        107,
        20,
        97,
        0,
        172,
        87,
        128,
        99,
        15,
        181,
        166,
        180,
        20,
        97,
        0,
        223,
        87,
        128,
        99,
        25,
        22,
        85,
        135,
        20,
        97,
        1,
        28,
        87,
        128,
        99,
        56,
        175,
        62,
        237,
        20,
        97,
        1,
        62,
        87,
        128,
        99,
        129,
        14,
        194,
        59,
        20,
        97,
        1,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        54,
        97,
        0,
        167,
        87,
        0,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        0,
        184,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        0,
        199,
        54,
        96,
        4,
        97,
        9,
        122,
        86,
        91,
        97,
        2,
        76,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        0,
        235,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        0,
        204,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        40,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        60,
        97,
        1,
        55,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        97,
        2,
        112,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        74,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        214,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        1,
        157,
        54,
        96,
        4,
        97,
        9,
        199,
        86,
        91,
        97,
        3,
        26,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        60,
        97,
        3,
        176,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        0,
        204,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        216,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        1,
        231,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        14,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        2,
        29,
        54,
        96,
        4,
        97,
        9,
        172,
        86,
        91,
        97,
        4,
        50,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        46,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        4,
        95,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        67,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        0,
        204,
        97,
        4,
        141,
        86,
        91,
        96,
        0,
        97,
        2,
        106,
        97,
        2,
        90,
        96,
        0,
        84,
        144,
        86,
        91,
        97,
        2,
        100,
        144,
        71,
        97,
        10,
        16,
        86,
        91,
        131,
        97,
        4,
        169,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        2,
        123,
        130,
        97,
        4,
        50,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        146,
        147,
        80,
        131,
        146,
        144,
        145,
        144,
        97,
        2,
        168,
        144,
        132,
        144,
        97,
        10,
        16,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        129,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        127,
        192,
        229,
        35,
        73,
        13,
        213,
        35,
        195,
        59,
        24,
        120,
        201,
        235,
        20,
        255,
        70,
        153,
        30,
        63,
        91,
        44,
        211,
        55,
        16,
        145,
        134,
        24,
        242,
        163,
        156,
        186,
        27,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        97,
        3,
        22,
        130,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        97,
        5,
        131,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        3,
        169,
        144,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        123,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        3,
        159,
        145,
        144,
        97,
        10,
        40,
        86,
        91,
        97,
        2,
        100,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        3,
        186,
        97,
        4,
        141,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        128,
        130,
        130,
        84,
        97,
        3,
        205,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        129,
        129,
        82,
        127,
        218,
        157,
        78,
        95,
        16,
        27,
        139,
        155,
        28,
        91,
        118,
        208,
        197,
        169,
        247,
        146,
        53,
        113,
        172,
        252,
        2,
        55,
        106,
        160,
        118,
        183,
        90,
        140,
        8,
        12,
        149,
        107,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        97,
        4,
        47,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        97,
        5,
        218,
        86,
        91,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        4,
        85,
        131,
        66,
        97,
        3,
        26,
        86,
        91,
        97,
        2,
        106,
        145,
        144,
        97,
        10,
        65,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        144,
        86,
        91,
        96,
        0,
        128,
        84,
        97,
        4,
        154,
        66,
        97,
        2,
        76,
        86,
        91,
        97,
        4,
        164,
        145,
        144,
        97,
        10,
        65,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        97,
        4,
        179,
        97,
        4,
        95,
        86,
        91,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        16,
        21,
        97,
        4,
        204,
        87,
        80,
        96,
        0,
        97,
        2,
        106,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        4,
        255,
        97,
        4,
        95,
        86,
        91,
        97,
        5,
        9,
        145,
        144,
        97,
        10,
        16,
        86,
        91,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        17,
        21,
        97,
        5,
        33,
        87,
        80,
        129,
        97,
        2,
        106,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        5,
        84,
        97,
        4,
        95,
        86,
        91,
        97,
        5,
        104,
        144,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        133,
        22,
        97,
        10,
        65,
        86,
        91,
        97,
        5,
        114,
        144,
        133,
        97,
        10,
        88,
        86,
        91,
        97,
        5,
        124,
        145,
        144,
        97,
        10,
        119,
        86,
        91,
        144,
        80,
        97,
        2,
        106,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        36,
        130,
        1,
        82,
        96,
        68,
        128,
        130,
        1,
        132,
        144,
        82,
        130,
        81,
        128,
        131,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        100,
        144,
        145,
        1,
        144,
        145,
        82,
        96,
        32,
        129,
        1,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        22,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        23,
        144,
        82,
        97,
        5,
        213,
        144,
        132,
        144,
        97,
        6,
        248,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        128,
        71,
        16,
        21,
        97,
        6,
        47,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        130,
        96,
        64,
        81,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        6,
        124,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        6,
        129,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        80,
        144,
        80,
        128,
        97,
        5,
        213,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        58,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        117,
        110,
        97,
        98,
        108,
        101,
        32,
        116,
        111,
        32,
        115,
        101,
        110,
        100,
        32,
        118,
        97,
        108,
        117,
        101,
        44,
        32,
        114,
        96,
        68,
        130,
        1,
        82,
        127,
        101,
        99,
        105,
        112,
        105,
        101,
        110,
        116,
        32,
        109,
        97,
        121,
        32,
        104,
        97,
        118,
        101,
        32,
        114,
        101,
        118,
        101,
        114,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        0,
        97,
        7,
        77,
        130,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        32,
        129,
        82,
        96,
        32,
        1,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        108,
        111,
        119,
        45,
        108,
        101,
        118,
        101,
        108,
        32,
        99,
        97,
        108,
        108,
        32,
        102,
        97,
        105,
        108,
        101,
        100,
        129,
        82,
        80,
        133,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        7,
        205,
        144,
        146,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        128,
        81,
        96,
        0,
        20,
        128,
        97,
        7,
        110,
        87,
        80,
        128,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        7,
        110,
        145,
        144,
        97,
        10,
        153,
        86,
        91,
        97,
        5,
        213,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        69,
        82,
        67,
        50,
        48,
        32,
        111,
        112,
        101,
        114,
        97,
        116,
        105,
        111,
        110,
        32,
        100,
        105,
        100,
        32,
        110,
        96,
        68,
        130,
        1,
        82,
        105,
        27,
        221,
        8,
        28,
        221,
        88,
        216,
        217,
        89,
        89,
        96,
        178,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        96,
        97,
        7,
        220,
        132,
        132,
        96,
        0,
        133,
        97,
        7,
        228,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        130,
        71,
        16,
        21,
        97,
        8,
        69,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        38,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        32,
        102,
        111,
        96,
        68,
        130,
        1,
        82,
        101,
        28,
        136,
        24,
        216,
        91,
        27,
        96,
        210,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        6,
        38,
        86,
        91,
        96,
        0,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        133,
        135,
        96,
        64,
        81,
        97,
        8,
        97,
        145,
        144,
        97,
        10,
        235,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        8,
        158,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        8,
        163,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        145,
        80,
        145,
        80,
        97,
        8,
        180,
        135,
        131,
        131,
        135,
        97,
        8,
        191,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        131,
        21,
        97,
        9,
        46,
        87,
        130,
        81,
        96,
        0,
        3,
        97,
        9,
        39,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        59,
        97,
        9,
        39,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        99,
        97,
        108,
        108,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        6,
        38,
        86,
        91,
        80,
        129,
        97,
        7,
        220,
        86,
        91,
        97,
        7,
        220,
        131,
        131,
        129,
        81,
        21,
        97,
        9,
        67,
        87,
        129,
        81,
        128,
        131,
        96,
        32,
        1,
        253,
        91,
        128,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        6,
        38,
        145,
        144,
        97,
        11,
        7,
        86,
        91,
        128,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        9,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        9,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        9,
        93,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        9,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        9,
        190,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        9,
        149,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        9,
        218,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        227,
        131,
        97,
        9,
        149,
        86,
        91,
        145,
        80,
        97,
        9,
        241,
        96,
        32,
        132,
        1,
        97,
        9,
        93,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        25,
        130,
        17,
        21,
        97,
        10,
        35,
        87,
        97,
        10,
        35,
        97,
        9,
        250,
        86,
        91,
        80,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        10,
        58,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        10,
        83,
        87,
        97,
        10,
        83,
        97,
        9,
        250,
        86,
        91,
        80,
        3,
        144,
        86,
        91,
        96,
        0,
        129,
        96,
        0,
        25,
        4,
        131,
        17,
        130,
        21,
        21,
        22,
        21,
        97,
        10,
        114,
        87,
        97,
        10,
        114,
        97,
        9,
        250,
        86,
        91,
        80,
        2,
        144,
        86,
        91,
        96,
        0,
        130,
        97,
        10,
        148,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        10,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        3,
        169,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        10,
        214,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        10,
        190,
        86,
        91,
        131,
        129,
        17,
        21,
        97,
        10,
        229,
        87,
        96,
        0,
        132,
        132,
        1,
        82,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        81,
        97,
        10,
        253,
        129,
        132,
        96,
        32,
        135,
        1,
        97,
        10,
        187,
        86,
        91,
        145,
        144,
        145,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        11,
        38,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        10,
        187,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        41,
        52,
        224,
        133,
        30,
        14,
        180,
        4,
        184,
        172,
        238,
        191,
        241,
        6,
        131,
        97,
        17,
        12,
        236,
        219,
        173,
        95,
        159,
        121,
        29,
        251,
        45,
        251,
        221,
        252,
        254,
        25,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        13,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static VESTINGWALLET_DEPLOYED_BYTECODE: ::ethers_core::types::Bytes = ::ethers_core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct VestingWallet<M>(::ethers_contract::Contract<M>);
    impl<M> ::core::clone::Clone for VestingWallet<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for VestingWallet<M> {
        type Target = ::ethers_contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for VestingWallet<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for VestingWallet<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(VestingWallet)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers_providers::Middleware> VestingWallet<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers_core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers_contract::Contract::new(
                    address.into(),
                    VESTINGWALLET_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers_core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers_contract::builders::ContractDeployer<M, Self>,
            ::ethers_contract::ContractError<M>,
        > {
            let factory = ::ethers_contract::ContractFactory::new(
                VESTINGWALLET_ABI.clone(),
                VESTINGWALLET_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers_contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `beneficiary` (0x38af3eed) function
        pub fn beneficiary(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<
            M,
            ::ethers_core::types::Address,
        > {
            self.0
                .method_hash([56, 175, 62, 237], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `duration` (0x0fb5a6b4) function
        pub fn duration(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([15, 181, 166, 180], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `releasable` (0xa3f8eace) function
        pub fn releasable_with_token(
            &self,
            token: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([163, 248, 234, 206], token)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `releasable` (0xfbccedae) function
        pub fn releasable(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([251, 204, 237, 174], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `release` (0x19165587) function
        pub fn release_with_token(
            &self,
            token: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([25, 22, 85, 135], token)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `release` (0x86d1a69f) function
        pub fn release(&self) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([134, 209, 166, 159], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `released` (0x96132521) function
        pub fn released(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([150, 19, 37, 33], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `released` (0x9852595c) function
        pub fn released_with_token(
            &self,
            token: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([152, 82, 89, 92], token)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `start` (0xbe9a6555) function
        pub fn start(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([190, 154, 101, 85], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `vestedAmount` (0x0a17b06b) function
        pub fn vested_amount(
            &self,
            timestamp: u64,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([10, 23, 176, 107], timestamp)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `vestedAmount` (0x810ec23b) function
        pub fn vested_amount_with_token(
            &self,
            token: ::ethers_core::types::Address,
            timestamp: u64,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([129, 14, 194, 59], (token, timestamp))
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `ERC20Released` event
        pub fn erc20_released_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            Erc20ReleasedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `EtherReleased` event
        pub fn ether_released_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            EtherReleasedFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers_contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            VestingWalletEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers_providers::Middleware> From<::ethers_contract::Contract<M>>
    for VestingWallet<M> {
        fn from(contract: ::ethers_contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "ERC20Released", abi = "ERC20Released(address,uint256)")]
    pub struct Erc20ReleasedFilter {
        #[ethevent(indexed)]
        pub token: ::ethers_core::types::Address,
        pub amount: ::ethers_core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "EtherReleased", abi = "EtherReleased(uint256)")]
    pub struct EtherReleasedFilter {
        pub amount: ::ethers_core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum VestingWalletEvents {
        Erc20ReleasedFilter(Erc20ReleasedFilter),
        EtherReleasedFilter(EtherReleasedFilter),
    }
    impl ::ethers_contract::EthLogDecode for VestingWalletEvents {
        fn decode_log(
            log: &::ethers_core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers_core::abi::Error> {
            if let Ok(decoded) = Erc20ReleasedFilter::decode_log(log) {
                return Ok(VestingWalletEvents::Erc20ReleasedFilter(decoded));
            }
            if let Ok(decoded) = EtherReleasedFilter::decode_log(log) {
                return Ok(VestingWalletEvents::EtherReleasedFilter(decoded));
            }
            Err(::ethers_core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for VestingWalletEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::Erc20ReleasedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::EtherReleasedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<Erc20ReleasedFilter> for VestingWalletEvents {
        fn from(value: Erc20ReleasedFilter) -> Self {
            Self::Erc20ReleasedFilter(value)
        }
    }
    impl ::core::convert::From<EtherReleasedFilter> for VestingWalletEvents {
        fn from(value: EtherReleasedFilter) -> Self {
            Self::EtherReleasedFilter(value)
        }
    }
    ///Container type for all input parameters for the `beneficiary` function with signature `beneficiary()` and selector `0x38af3eed`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "beneficiary", abi = "beneficiary()")]
    pub struct BeneficiaryCall;
    ///Container type for all input parameters for the `duration` function with signature `duration()` and selector `0x0fb5a6b4`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "duration", abi = "duration()")]
    pub struct DurationCall;
    ///Container type for all input parameters for the `releasable` function with signature `releasable(address)` and selector `0xa3f8eace`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "releasable", abi = "releasable(address)")]
    pub struct ReleasableWithTokenCall {
        pub token: ::ethers_core::types::Address,
    }
    ///Container type for all input parameters for the `releasable` function with signature `releasable()` and selector `0xfbccedae`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "releasable", abi = "releasable()")]
    pub struct ReleasableCall;
    ///Container type for all input parameters for the `release` function with signature `release(address)` and selector `0x19165587`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "release", abi = "release(address)")]
    pub struct ReleaseWithTokenCall {
        pub token: ::ethers_core::types::Address,
    }
    ///Container type for all input parameters for the `release` function with signature `release()` and selector `0x86d1a69f`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "release", abi = "release()")]
    pub struct ReleaseCall;
    ///Container type for all input parameters for the `released` function with signature `released()` and selector `0x96132521`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "released", abi = "released()")]
    pub struct ReleasedCall;
    ///Container type for all input parameters for the `released` function with signature `released(address)` and selector `0x9852595c`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "released", abi = "released(address)")]
    pub struct ReleasedWithTokenCall {
        pub token: ::ethers_core::types::Address,
    }
    ///Container type for all input parameters for the `start` function with signature `start()` and selector `0xbe9a6555`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "start", abi = "start()")]
    pub struct StartCall;
    ///Container type for all input parameters for the `vestedAmount` function with signature `vestedAmount(uint64)` and selector `0x0a17b06b`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "vestedAmount", abi = "vestedAmount(uint64)")]
    pub struct VestedAmountCall {
        pub timestamp: u64,
    }
    ///Container type for all input parameters for the `vestedAmount` function with signature `vestedAmount(address,uint64)` and selector `0x810ec23b`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "vestedAmount", abi = "vestedAmount(address,uint64)")]
    pub struct VestedAmountWithTokenCall {
        pub token: ::ethers_core::types::Address,
        pub timestamp: u64,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum VestingWalletCalls {
        Beneficiary(BeneficiaryCall),
        Duration(DurationCall),
        ReleasableWithToken(ReleasableWithTokenCall),
        Releasable(ReleasableCall),
        ReleaseWithToken(ReleaseWithTokenCall),
        Release(ReleaseCall),
        Released(ReleasedCall),
        ReleasedWithToken(ReleasedWithTokenCall),
        Start(StartCall),
        VestedAmount(VestedAmountCall),
        VestedAmountWithToken(VestedAmountWithTokenCall),
    }
    impl ::ethers_core::abi::AbiDecode for VestingWalletCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers_core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <BeneficiaryCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Beneficiary(decoded));
            }
            if let Ok(decoded)
                = <DurationCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Duration(decoded));
            }
            if let Ok(decoded)
                = <ReleasableWithTokenCall as ::ethers_core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::ReleasableWithToken(decoded));
            }
            if let Ok(decoded)
                = <ReleasableCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Releasable(decoded));
            }
            if let Ok(decoded)
                = <ReleaseWithTokenCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ReleaseWithToken(decoded));
            }
            if let Ok(decoded)
                = <ReleaseCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Release(decoded));
            }
            if let Ok(decoded)
                = <ReleasedCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Released(decoded));
            }
            if let Ok(decoded)
                = <ReleasedWithTokenCall as ::ethers_core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::ReleasedWithToken(decoded));
            }
            if let Ok(decoded)
                = <StartCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Start(decoded));
            }
            if let Ok(decoded)
                = <VestedAmountCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::VestedAmount(decoded));
            }
            if let Ok(decoded)
                = <VestedAmountWithTokenCall as ::ethers_core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::VestedAmountWithToken(decoded));
            }
            Err(::ethers_core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers_core::abi::AbiEncode for VestingWalletCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::Beneficiary(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::Duration(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::ReleasableWithToken(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::Releasable(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::ReleaseWithToken(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::Release(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::Released(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::ReleasedWithToken(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::Start(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::VestedAmount(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::VestedAmountWithToken(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for VestingWalletCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::Beneficiary(element) => ::core::fmt::Display::fmt(element, f),
                Self::Duration(element) => ::core::fmt::Display::fmt(element, f),
                Self::ReleasableWithToken(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::Releasable(element) => ::core::fmt::Display::fmt(element, f),
                Self::ReleaseWithToken(element) => ::core::fmt::Display::fmt(element, f),
                Self::Release(element) => ::core::fmt::Display::fmt(element, f),
                Self::Released(element) => ::core::fmt::Display::fmt(element, f),
                Self::ReleasedWithToken(element) => ::core::fmt::Display::fmt(element, f),
                Self::Start(element) => ::core::fmt::Display::fmt(element, f),
                Self::VestedAmount(element) => ::core::fmt::Display::fmt(element, f),
                Self::VestedAmountWithToken(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<BeneficiaryCall> for VestingWalletCalls {
        fn from(value: BeneficiaryCall) -> Self {
            Self::Beneficiary(value)
        }
    }
    impl ::core::convert::From<DurationCall> for VestingWalletCalls {
        fn from(value: DurationCall) -> Self {
            Self::Duration(value)
        }
    }
    impl ::core::convert::From<ReleasableWithTokenCall> for VestingWalletCalls {
        fn from(value: ReleasableWithTokenCall) -> Self {
            Self::ReleasableWithToken(value)
        }
    }
    impl ::core::convert::From<ReleasableCall> for VestingWalletCalls {
        fn from(value: ReleasableCall) -> Self {
            Self::Releasable(value)
        }
    }
    impl ::core::convert::From<ReleaseWithTokenCall> for VestingWalletCalls {
        fn from(value: ReleaseWithTokenCall) -> Self {
            Self::ReleaseWithToken(value)
        }
    }
    impl ::core::convert::From<ReleaseCall> for VestingWalletCalls {
        fn from(value: ReleaseCall) -> Self {
            Self::Release(value)
        }
    }
    impl ::core::convert::From<ReleasedCall> for VestingWalletCalls {
        fn from(value: ReleasedCall) -> Self {
            Self::Released(value)
        }
    }
    impl ::core::convert::From<ReleasedWithTokenCall> for VestingWalletCalls {
        fn from(value: ReleasedWithTokenCall) -> Self {
            Self::ReleasedWithToken(value)
        }
    }
    impl ::core::convert::From<StartCall> for VestingWalletCalls {
        fn from(value: StartCall) -> Self {
            Self::Start(value)
        }
    }
    impl ::core::convert::From<VestedAmountCall> for VestingWalletCalls {
        fn from(value: VestedAmountCall) -> Self {
            Self::VestedAmount(value)
        }
    }
    impl ::core::convert::From<VestedAmountWithTokenCall> for VestingWalletCalls {
        fn from(value: VestedAmountWithTokenCall) -> Self {
            Self::VestedAmountWithToken(value)
        }
    }
    ///Container type for all return fields from the `beneficiary` function with signature `beneficiary()` and selector `0x38af3eed`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BeneficiaryReturn(pub ::ethers_core::types::Address);
    ///Container type for all return fields from the `duration` function with signature `duration()` and selector `0x0fb5a6b4`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DurationReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `releasable` function with signature `releasable(address)` and selector `0xa3f8eace`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ReleasableWithTokenReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `releasable` function with signature `releasable()` and selector `0xfbccedae`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ReleasableReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `released` function with signature `released()` and selector `0x96132521`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ReleasedReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `released` function with signature `released(address)` and selector `0x9852595c`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ReleasedWithTokenReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `start` function with signature `start()` and selector `0xbe9a6555`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct StartReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `vestedAmount` function with signature `vestedAmount(uint64)` and selector `0x0a17b06b`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct VestedAmountReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `vestedAmount` function with signature `vestedAmount(address,uint64)` and selector `0x810ec23b`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct VestedAmountWithTokenReturn(pub ::ethers_core::types::U256);
}
